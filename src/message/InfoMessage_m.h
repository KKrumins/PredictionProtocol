//
// Generated file, do not edit! Created by nedtool 5.7 from message/InfoMessage.msg.
//

#ifndef __INFOMESSAGE_M_H
#define __INFOMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>message/InfoMessage.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet InfoMessage
 * {
 *     int packetId = 2;
 *     int senderId;
 *     int receiverId;
 *     int LQI;
 *     int RSSI;
 *     int day;
 *     int timePeriod;
 *     simtime_t timestamp;
 * }
 * </pre>
 */
class InfoMessage : public ::omnetpp::cPacket
{
  protected:
    int packetId;
    int senderId;
    int receiverId;
    int LQI;
    int RSSI;
    int day;
    int timePeriod;
    ::omnetpp::simtime_t timestamp;

  private:
    void copy(const InfoMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const InfoMessage&);

  public:
    InfoMessage(const char *name=nullptr, short kind=0);
    InfoMessage(const InfoMessage& other);
    virtual ~InfoMessage();
    InfoMessage& operator=(const InfoMessage& other);
    virtual InfoMessage *dup() const override {return new InfoMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getPacketId() const;
    virtual void setPacketId(int packetId);
    virtual int getSenderId() const;
    virtual void setSenderId(int senderId);
    virtual int getReceiverId() const;
    virtual void setReceiverId(int receiverId);
    virtual int getLQI() const;
    virtual void setLQI(int LQI);
    virtual int getRSSI() const;
    virtual void setRSSI(int RSSI);
    virtual int getDay() const;
    virtual void setDay(int day);
    virtual int getTimePeriod() const;
    virtual void setTimePeriod(int timePeriod);
    virtual ::omnetpp::simtime_t getTimestamp() const;
    virtual void setTimestamp(::omnetpp::simtime_t timestamp);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const InfoMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, InfoMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __INFOMESSAGE_M_H

